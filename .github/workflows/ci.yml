on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

name: CI

env:
  # https://doc.rust-lang.org/cargo/reference/profiles.html#incremental
  CARGO_INCREMENTAL: 1
  CI: 1

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          target: wasm32-unknown-unknown
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: cargo fmt --all -- --check
      - run: cargo clippy --release --all-features --target wasm32-unknown-unknown
      - run: wasm-pack test --node --release --all-features
      - name: Install node_modules
        run: yarn install --immutable
      - run: yarn workspaces foreach -vpt run build
      - run: yarn workspaces foreach -vpt run test
      - name: Build npm package
        run: yarn build
      - uses: actions/upload-artifact@v3
        with:
          name: mina-singer-wasm-package
          path: package/**/*
          if-no-files-found: error

  maybe-release:
    name: release
    runs-on: ubuntu-latest
    needs: [ checks ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: mina-singer-wasm-package

      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: release-please-action
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'

      - uses: actions/checkout@v3
        if: ${{ steps.release.outputs.release_created }}

      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}

      - env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          echo npmAuthToken: "$NODE_AUTH_TOKEN" >> ./.yarnrc.yml

       - run: yarn workspace mina-signer-wasm npm publish --access-public
         if: ${{ steps.release.outputs.release_created }}
